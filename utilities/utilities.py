import cv2
import os
from roboflow import Roboflow

def rename_files_in_dir(dir_path:str, txt_to_remove:str,txt_to_insert:str):
    """Rename files in directory.

    Args:
        dir_path (str): _description_
        txt_to_remove (str): _description_
        txt_to_insert (str): _description_
    """
    for filename in os.listdir(dir_path):
        full_file_path = os.path.join(dir_path,filename)
        os.rename(full_file_path, full_file_path.replace(txt_to_remove, txt_to_insert))


def convert_mp4_to_jpg(dir_path:str, txt_to_remove:str,txt_to_insert:str):
    """Converts MP4s to JPGs.

    Args:
        dir_path (str): _description_
        txt_to_remove (str): _description_
        txt_to_insert (str): _description_
    """
    # Read the video from specified path
    for filename in os.listdir(dir_path):
        cam = cv2.VideoCapture(filename)
        
        try:
            #Temporary fix for weird file names generated by Adobe
            dir_name = filename.replace(txt_to_remove,txt_to_insert)
            # creating a folder named data
            if not os.path.exists(dir_name):
                os.makedirs(dir_name)
        
        # if not created then raise error
        except OSError:
            print ('Error: Creating directory of data')
        
        # frame
        currentframe = 0
        
        while(True):
            
            # reading from frame
            ret,frame = cam.read()
        
            if ret:
                # if video is still left continue creating images
                name = './'+ dir_name +'/frame_' + str(currentframe) + '.jpg'
                print ('Creating...' + name)
        
                # writing the extracted images
                cv2.imwrite(name, frame)
        
                # increasing counter so that it will
                # show how many frames are created
                currentframe += 1
            else:
                break
        
        # Release all space and windows once done
        cam.release()
        cv2.destroyAllWindows()
        
def main():
    """Performs a test-run for local testing"""
    #rename_files_in_dir('/Users/levihuddleston/Documents/Clips/australia',"austrailia_open_semi_final","australian_open")
    get_roboflow_data()
def get_roboflow_data(api_key:str = "E1UAwvyKe8uHH4eJGFid" ,workspace:str = "slalom",project:str = "tennis-tracking",data_format:str = "yolov8"):
    """Get dataset from Roboflow.

    Args:
        api_key (str, optional): _description_. Defaults to "E1UAwvyKe8uHH4eJGFid".
        workspace (str, optional): _description_. Defaults to "slalom".
        project (str, optional): _description_. Defaults to "tennis-tracking".
        data_format (str, optional): _description_. Defaults to "yolov8".
    """
    
    rf = Roboflow(api_key=api_key)
    project = rf.workspace(workspace).project(project)
    dataset = project.version(1).download(data_format)
    print(dataset.location)
    return dataset

if __name__ == "__main__":
    main()